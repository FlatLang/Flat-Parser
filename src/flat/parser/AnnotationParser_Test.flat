package flat/parser

import flat/ast/FileNode
import flat/ast/AnnotationNode
import flat/annotations/PublicModifier
import flat/annotations/LetModifier
import flat/io/File

testable class {
  async test `can parse annotations at front of variable declaration`() {
    let request = ParseRequest(
      parent: FileNode(file: File("test.flat")),
      sourceCode: "public let String test"
    )

    let result = AnnotationParser().parse(request)

    let expected = ParseResult.Builder()
      .success(true)
      .remainder("String test")
      .nodes([
        PublicModifier(aliasUsed: "public"),
        LetModifier(aliasUsed: "let")
      ])
      .build()

    expect(result).toBe(expected)
  }

  async test `doesnt parse annotations at end of variable declaration`() {
    let request = ParseRequest(
      parent: FileNode(file: File("test.flat")),
      sourceCode: "String test public let"
    )

    let result = AnnotationParser().parse(request)

    let expected = ParseResult.Builder()
      .success(false)
      .remainder("")
      .nodes(Array())
      .build()

    expect(result).toBe(expected)
  }
}

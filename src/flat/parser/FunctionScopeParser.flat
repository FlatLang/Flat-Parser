package flat/parser

import flat/ast/FunctionScopeNode
import flat/compiler/models/Token

class extends ParserBase {
  override let lazy ParserBase[] childParsers => Array():addAll([
    AnnotationParser(),
    CommentParser(),
    FunctionCallParser(),
    IdentifierParser(),
    LiteralParser()
  ])

  override let lazy TokenMatcher matcher => TokenMatcherGroup([
    TokenMatcher(Token.Type.SYMBOL, value: "{"),
  ])

  override public checkStatementContinuation(ParseContext context, Token token) => true

  override public generateNode(ParseContext context, TokenMatch match) -> FunctionScopeNode {
    return FunctionScopeNode()
  }
}
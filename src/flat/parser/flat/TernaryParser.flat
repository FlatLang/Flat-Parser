package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/TernaryNode
import flat/compiler/models/Token
import flat/log/Logger

data class extends ParserBase {
  static Logger log = Logger(TernaryParser.class)

  override ParserBase[] childParsers => Array()
    :addAll(LocalScopeParser().valueParsers)

  override lazy TokenPattern pattern => GroupTokenPattern([
    CaptureTokenPattern(
      label: "true_value",
      start: Token(value: "?"),
      end: Token(value: ":")
    )
  ])

  override public acceptImmediately() => true

  override public generateNode() -> TernaryNode {
    return TernaryNode()
  }
}
package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/FileNode
import flat/ast/AnnotationNode
import flat/annotations/PublicModifier
import flat/annotations/LetModifier
import flat/compiler/models/Token
import flat/io/File

testable class {
  test `can match a basic array instantiation`() {
    let parser = ArrayInstantiationParser()
    let matcher = parser.matcher
    let result = matcher.matchAll([
      Token(value: "test", type: Token.Type.IDENTIFIER),
      Token(value: "[", type: Token.Type.SYMBOL),
      Token(value: "]", type: Token.Type.SYMBOL)
    ], ParseContext()).last

    expect(result?.tokens).toBe([
      Token(value: "test", type: Token.Type.IDENTIFIER),
      Token(value: "[", type: Token.Type.SYMBOL),
      Token(value: "]", type: Token.Type.SYMBOL)
    ])

    expect(result).toNotBe(null)
    expect(matcher.partial).toBe(true)
  }
}

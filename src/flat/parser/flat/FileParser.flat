package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/compiler/models/Token
import flat/ast/FileNode

data class extends ParserBase {
  override lazy TokenPattern pattern => NodeGroupTokenPattern([
      AnnotationParser(),
      ImportParser(),
      PackageParser(),
      ClassParser()
    ],
    label: "file_contents"
  )

  override public generateNode(ParseContext context, TokenMatch match) -> FileNode {
    return FileNode(
      file: context.file
    )
  }

  override public getChildNodeTokenMatches(ParseContext context, TokenMatch match) => NodeTokenMatch[] {
    if (let contents = match.getMatch<NodeGroupTokenMatch>("file_contents")) {
      return contents.getChildNodeMatches()
    }
  }
}
package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/ColonAccessNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    IdentifierParser(),
    FunctionCallParser()
  ])

  override lazy TokenPattern pattern => SingleTokenPattern(Token.Type.SYMBOL, value: ":")

  override public checkStatementContinuation(ParseContext context, Token token) => true
  override public acceptImmediately() => true

  override public generateNode(ParseContext context, TokenMatch match) -> ColonAccessNode {
    return ColonAccessNode()
  }
}
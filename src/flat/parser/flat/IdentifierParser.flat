package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/IdentifierNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => [
    DotAccessParser(),
    ColonAccessParser(),
    AssignmentParser(),
    ArrayAccessParser(),
    BinaryOperationParser(),
    UnaryOperationParser(),
    TernaryParser(),
    MatchCaseParser()
  ]

  override lazy TokenPattern pattern => SingleTokenPattern(type: Token.Type.IDENTIFIER, label: "name")

  override public generateNode() -> IdentifierNode {
    return IdentifierNode(
      name: lastMatch.getValue("name")
    )
  }
}
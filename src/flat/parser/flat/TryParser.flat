package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/TryNode
import flat/compiler/models/Token
import flat/log/Logger

data class extends ParserBase {
  static Logger log = Logger(TryParser.class)

  override ParserBase[] childParsers => Array()
    :addAll(LocalScopeParser().valueParsers)

  override lazy TokenPattern pattern => SingleTokenPattern(type: Token.Type.IDENTIFIER, value: "try", exact: true)

  override public generateNode() -> TryNode {
    return TryNode()
  }
}
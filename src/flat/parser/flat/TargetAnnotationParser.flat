package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/annotations
import flat/compiler/models/Token
import flat/ast/AnnotationNode
import flat/ast/Node

import flat/extensions/SyntaxStringFunctions

data class extends ParserBase {
  override lazy TokenMatcher matcher => pattern.getMatcher()

  override lazy TokenPattern pattern => GroupTokenPattern<TargetAnnotation>([
    SingleTokenPattern(type: Token.Type.SYMBOL, value: "["),
    SingleTokenPattern(type: Token.Type.IDENTIFIER, value: TargetAnnotation.identifier),
    XorTokenPattern([
      GroupTokenPattern([
        SingleTokenPattern(type: Token.Type.IDENTIFIER, value: "not"),
        SingleTokenPattern(type: Token.Type.IDENTIFIER),
      ]),
      SingleTokenPattern(type: Token.Type.IDENTIFIER)
    ], repeat: true, greedy: false),
    SingleTokenPattern(type: Token.Type.SYMBOL, value: "]")
  ])
}
package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/datastruct/HashMap
import flat/parser/Parser
import flat/ast/FileNode
import flat/ast/FunctionNode
import flat/ast/ParameterNode
import flat/compiler/models/Token
import flat/io/File

testable class {
    test `can match reified generic parameter`() {
        let matcher = GenericParameterParser().matcher
        let result = matcher.matchAll([
            Token(value: "reified", type: Token.Type.IDENTIFIER),
            Token(value: "Object", type: Token.Type.IDENTIFIER),
        ], ParseContext()).last

        let expected = [
            Token(value: "reified", type: Token.Type.IDENTIFIER),
            Token(value: "Object", type: Token.Type.IDENTIFIER),
        ]

        expect(result?.tokens).toBe(expected)
        expect(matcher.partial).toBe(true)
    }
}

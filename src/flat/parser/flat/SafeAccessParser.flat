package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/SafeAccessNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    IdentifierParser(),
    FunctionCallParser()
  ])

  override lazy TokenPattern pattern => SingleTokenPattern(type: Token.Type.SYMBOL, value: "?.", exact: true)

  override public generateNode() -> SafeAccessNode {
    return SafeAccessNode()
  }
}
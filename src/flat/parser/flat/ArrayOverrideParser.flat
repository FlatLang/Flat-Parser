package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/ArrayOverrideNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    FieldScopeParser(),
    AssignmentParser(),
    ArrowExpressionParser(),
    DoubleArrowExpressionParser()
  ])

  override lazy TokenPattern pattern => GroupTokenPattern([
    SingleTokenPattern(Token.Type.IDENTIFIER, "this"),
    SingleTokenPattern(Token.Type.SYMBOL, value: "["),
    ParameterParser().pattern,
    SingleTokenPattern(Token.Type.SYMBOL, value: "]")
  ])

  override public generateNode() -> ArrayOverrideNode {
    return ArrayOverrideNode()
  }
}
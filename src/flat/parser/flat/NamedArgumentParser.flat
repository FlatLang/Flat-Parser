package flat/parser/flat

import flat/parser
import flat/parser/matchers
import flat/ast/NamedArgumentNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    AnnotationParser(),
    FunctionCallParser(),
    IdentifierParser(),
    LiteralParser(),
    RegexPatternParser(),
    LambdaParser(),
    ArrayInitializerParser(),
    UnaryOperationParser(),
    PriorityParser(),
    CastParser(),
  ])

  override lazy TokenPattern pattern => GroupTokenPattern([
    SingleTokenPattern(type: Token.Type.IDENTIFIER, label: "name"),
    SingleTokenPattern(type: Token.Type.SYMBOL, value: ":"),
  ], label: "named_argument")

  override public generateNode() -> NamedArgumentNode {
    return NamedArgumentNode(
      name: lastMatch.getValue("name")
    )
  }
}
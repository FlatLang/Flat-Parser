package flat/parser

import flat/parser/Parser
import flat/ast/FileNode
import flat/ast/ClassNode
import flat/io/File

testable class {
  async test `can parse declaration`() {
    let parser = ClassParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat")),
      sourceCode: "class Bob"
    )

    let result = parser.parse(request)

    expect(result).toNotBe(null)
    expect(result.success).toBe(true)

    let expected = ClassNode(
      name: "Bob",
      implicitName: false
    )

    expect(result.node).toBe(expected)
  }

  async test `inherits name from file name`() {
    let parser = ClassParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat")),
      sourceCode: "class"
    )

    let result = parser.parse(request)

    expect(result).toNotBe(null)
    expect(result.success).toBe(true)

    let expected = ClassNode(
      name: "test",
      implicitName: true
    )

    expect(result.node).toBe(expected)
  }
}

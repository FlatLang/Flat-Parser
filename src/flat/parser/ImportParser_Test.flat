package flat/parser

import flat/parser/Parser
import flat/ast/FileNode
import flat/ast/ImportNode
import flat/io/File

testable class {
  async test `can parse import declaration`() {
    let parser = ImportParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat"))
    )

    let result = parser.parse("import flat/thing/test", request)

    expect(result).toNotBe(null)
    expect(result.success).toBe(true)

    let expected = ImportNode("flat/thing/test")

    expect(result.node).toBe(expected)
  }

  async test `can parse single letter import declaration`() {
    let parser = ImportParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat"))
    )

    let result = parser.parse("import a", request)

    expect(result).toNotBe(null)
    expect(result.success).toBe(true)

    let expected = ImportNode("a")

    expect(result.node).toBe(expected)
  }

  async test `fails parse if doesnt contain import keyword`() {
    let parser = ImportParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat"))
    )

    let results = Array<ParseResult>():addAll([
      parser.parse("imporrt", request),
      parser.parse(" import", request),
      parser.parse("test import", request)
    ])

    results.forEachAsync((result) => {
      expect(result).toNotBe(null)
      expect(result.success).toBe(false)
      expect(result.errorMessage).toBe("Import declaration doesn't start with \"import\"")
    })
  }

  async test `fails parse if doesnt contain anything after the import keyword`() {
    let parser = ImportParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat"))
    )

    let results = Array<ParseResult>():addAll([
      parser.parse("import", request),
      parser.parse("import ", request)
    ])

    results.forEachAsync((result) => {
      expect(result).toNotBe(null)
      expect(result.success).toBe(false)
      expect(result.errorMessage).toBe("Import declaration doesn't contain anything after the \"import\" keyword")
    })
  }

  async test `fails parse if doesnt have whitespace after the import keyword`() {
    let parser = ImportParser()

    let request = ParseRequest(
      parent: FileNode(File("test.flat"))
    )

    let results = Array<ParseResult>():addAll([
      parser.parse("import\"aoeu", request),
      parser.parse("importaoeu", request),
      parser.parse("importa test", request)
    ])

    results.forEachAsync((result) => {
      expect(result).toNotBe(null)
      expect(result.success).toBe(false)
      expect(result.errorMessage).toBe("Import declaration doesn't have whitespace after the \"import\" keyword")
    })
  }
}

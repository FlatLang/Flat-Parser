package flat/parser

import flat/parser/matchers
import flat/compiler/models/Token
import flat/ast/MatchScopeNode

data class extends ParserBase {
  override ParserBase[] childParsers => Array()
    :addAll(LocalScopeParser().childParsers)

  override lazy TokenPattern pattern => SingleTokenPattern(Token.Type.SYMBOL, value: "{")

  override public checkStatementContinuation(ParseContext context, Token token) => true {
    match token.type {
      Token.Type.SYMBOL => {
        match token.value {
          "{" => return false
        }
      }
    }
  }

  override public acceptImmediately() => true

  override public generateNode(ParseContext context, TokenMatch match) -> MatchScopeNode {
    return MatchScopeNode()
  }
}
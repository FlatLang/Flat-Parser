package flat/parser

import flat/datastruct/HashMap
import flat/compiler/models/Token
import flat/log/Logger

data class extends TokenPattern {
  let static Logger log = Logger(SingleTokenPattern.class)

  public getMatcher() => SingleTokenMatcher(this)

  public toPatternString() -> String {
    var str = "<"
    str += Token.Type.toString(tokenType)
    if (values) {
      str += "[" + values.map({ "\"#{_}\"" }).join(" ") + "]"
    }
    if (value) {
      str += ":\"" + value + "\""
    }
    if (label) {
      str += " as #{label}"
    }
    str += ">"
    str += getModifiersString()

    return str
  }
}
package flat/parser

import flat/ast/DoubleArrowExpressionNode
import flat/compiler/models/Token

data class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll(AssignmentParser().childParsers)

  override lazy TokenPattern pattern => SingleTokenPattern(Token.Type.SYMBOL, "<=>")

  override public checkStatementContinuation(ParseContext context, Token token) => true

  override public generateNode(ParseContext context, TokenMatch match) -> DoubleArrowExpressionNode {
    return DoubleArrowExpressionNode()
  }
}
package flat/parser/parsers

import flat/parser
import flat/parser/matchers
import flat/ast/ThrowNode
import flat/compiler/models/Token
import flat/log/Logger

data class extends ParserBase {
  static Logger log = Logger(ThrowParser.class)

  override ParserBase[] childParsers => Array()
    :addAll(LocalScopeParser().childParsers)

  override lazy TokenPattern pattern => SingleTokenPattern(Token.Type.IDENTIFIER, "throw")

  override public checkStatementContinuation(ParseContext context, Token token) => true

  override public acceptImmediately() => true

  override public generateNode(ParseContext context, TokenMatch match) -> ThrowNode {
    return ThrowNode()
  }
}
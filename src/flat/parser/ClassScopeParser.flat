package flat/parser

import flat/ast/ClassScopeNode
import flat/compiler/models/Token

class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    AnnotationParser(),
    CommentParser(),
    FieldParser(),
    FunctionParser(),
    AssignmentParser()
  ])

  override lazy TokenMatcher matcher => pattern.getMatcher()

  override lazy TokenPattern pattern => GroupTokenPattern([
    SingleTokenPattern(Token.Type.SYMBOL, value: "{"),
  ])

  override public checkStatementContinuation(ParseContext context, Token token) => true

  override public generateNode(ParseContext context, TokenMatch match) -> ClassScopeNode {
    return ClassScopeNode()
  }
}
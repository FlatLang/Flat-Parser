package flat/parser

import flat/ast/LiteralNode
import flat/compiler/models/Token

class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    DotAccessParser(),
    ColonAccessParser()
  ])

  override lazy TokenMatcher matcher => pattern.getMatcher()

  override lazy TokenPattern pattern => GroupTokenPattern([
    TokenPattern(Token.Type.STRING, label: "value")
  ])

  override public generateNode(ParseContext context, TokenMatch match) -> LiteralNode {
    let value = match.getValue("value")

    return LiteralNode(
      value: value,
      literalType: LiteralNode.Type.STRING
    )
  }
}
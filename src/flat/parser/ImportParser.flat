package flat/parser

import flat/ast/ImportNode
import flat/compiler/models/Token

import flat/extensions/SyntaxStringFunctions

class extends ParserBase {
  override let lazy TokenMatcher matcher => TokenMatcherGroup([
    TokenMatcher(Token.Type.IDENTIFIER, "import"),
    TokenMatcher(Token.Type.IDENTIFIER, label: "import_location_component"),
    TokenMatcherGroup([
      TokenMatcher(Token.Type.SYMBOL, "/", label: "import_location_component"),
      TokenMatcher(Token.Type.IDENTIFIER, label: "import_location_component")
    ], repeat: true, optional: true)
  ])

  override public generateNode(ParseContext context, TokenMatch match) -> ImportNode {
    let components = match.getValues("import_location_component")

    return ImportNode(
      location: components.join()
    )
  }
}
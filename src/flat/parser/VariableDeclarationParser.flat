package flat/parser

import flat/ast/VariableDeclarationNode

import flat/extensions/SyntaxStringFunctions

class extends Parser {
  override public async parse(
    ParseRequest request
  ) => ParseResult() {
    let lastWhitespaceIndex = request.sourceCode.findLastWhitespaceOnTopLevel()

    if (lastWhitespaceIndex == -1)
      return ParseResult(errorMessage: "Variable declaration missing type or name value")

    let name = request.sourceCode.substring(lastWhitespaceIndex + 1)
    var remainder = request.sourceCode.substring(end: lastWhitespaceIndex).trim()
    var String arrayBrackets = null

    if (remainder.endsWith("]")) {
      let startBracket = remainder.findEndingMatch(remainder.count - 1, '[', ']', direction: -1)

      arrayBrackets = remainder.substring(startBracket)
      remainder = remainder.substring(end: startBracket).trim()
    }

    if ((let whitespaceIndex = remainder.findLastWhitespaceOnTopLevel()) != -1) {
      remainder = remainder.substring(end: whitespaceIndex).trim()

      return ParseResult(errorMessage: "Variable declaration contains extraneous words: \"#{remainder}\"")
    }

    let type = remainder

    let variableDeclaration = VariableDeclarationNode(name: name, type: type, arrayBrackets: arrayBrackets)

    return ParseResult(
      node: variableDeclaration
    )
  }
}
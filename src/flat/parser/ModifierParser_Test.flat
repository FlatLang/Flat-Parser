package flat/parser

import flat/datastruct/HashMap
import flat/parser/Parser
import flat/annotations/VisibleModifier
import flat/annotations/PublicModifier
import flat/annotations/PrivateModifier
import flat/annotations/LetModifier
import flat/annotations/VarModifier
import flat/ast/FileNode
import flat/ast/ClassNode
import flat/ast/FieldNode
import flat/ast/Node
import flat/compiler/models/Token
import flat/io/File

testable class {
  async test `can parse visible modifier`() {
    let parser = ModifierParser()

    let match = TokenMatch(
      null,
      HashMap()
        :add("alias", Array<String>():add("visible"))
    )

    let result = parser.generateNode(null, match)

    let expected = VisibleModifier(
      aliasUsed: "visible"
    )

    expect(result).toBe(expected)
  }
}

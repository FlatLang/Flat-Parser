package flat/parser

import flat/ast/ColonAccessNode
import flat/compiler/models/Token

class extends ParserBase {
  override ParserBase[] childParsers => Array():addAll([
    IdentifierParser(),
    FunctionCallParser()
  ])

  override let lazy TokenMatcher matcher => pattern.getMatcher()

  override let lazy TokenPattern pattern => GroupTokenPattern([
    TokenPattern(Token.Type.SYMBOL, value: ":"),
  ])

  override public checkStatementContinuation(ParseContext context, Token token) => true

  override public generateNode(ParseContext context, TokenMatch match) -> ColonAccessNode {
    return ColonAccessNode()
  }
}
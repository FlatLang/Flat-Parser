package flat/parser

import flat/datastruct/HashMap
import flat/parser/Parser
import flat/ast/FileNode
import flat/ast/PackageNode
import flat/compiler/models/Token
import flat/io/File

testable class {
  async test `can parse package declaration`() {
    let parser = PackageParser()

    let match = TokenMatch(
      null,
      HashMap():add(
        "package_location_component",
        Array<String>():addAll(["flat", "/", "thing", "/", "test"])
      )
    )

    let result = parser.generateNode(null, match)

    let expected = PackageNode(location: "flat/thing/test")

    expect(result).toBe(expected)
  }

  async test `can parse single letter package declaration`() {
    let parser = PackageParser()

    let match = TokenMatch(
      null,
      HashMap():add(
        "package_location_component",
        Array<String>():addAll(["a"])
      )
    )

    let result = parser.generateNode(null, match)

    let expected = PackageNode(location: "a")

    expect(result).toBe(expected)
  }
}
